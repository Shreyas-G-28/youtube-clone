{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/Documents/newdashboard/youtube-clone/src/components/SearchResult.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { YOUTUBE_KEYWORD_API_PART1, YOUTUBE_KEYWORD_API_PART2 } from \"../utils/constants\";\nimport VideoCard from \"./VideoCard\";\nimport Shimmer from \"./Shimmer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResult = () => {\n  _s();\n  const [searchVideos, setSearchVideos] = useState([]);\n  const [searchParam] = useSearchParams();\n  const getSearchResults = async () => {\n    const response = await fetch(YOUTUBE_KEYWORD_API_PART1 + searchParam + YOUTUBE_KEYWORD_API_PART2);\n    const jsonResponse = await response.json();\n    jsonResponse.items.length > 0 && setSearchVideos(jsonResponse.items);\n  };\n  useEffect(() => {\n    getSearchResults(searchParam.get('search_query'));\n  }, [searchParam]);\n  if (searchVideos.length === 0) return /*#__PURE__*/_jsxDEV(Shimmer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap\",\n    children: searchVideos.map(video => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: '../watch?v=' + video.id.videoId,\n        children: /*#__PURE__*/_jsxDEV(VideoCard, {\n          info: video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, video.id.videoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResult, \"iJac1hMBceBTWp8I+bgxVJSXu+w=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResult;\nexport default SearchResult;\nvar _c;\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["useState","useEffect","useSearchParams","Link","YOUTUBE_KEYWORD_API_PART1","YOUTUBE_KEYWORD_API_PART2","VideoCard","Shimmer","jsxDEV","_jsxDEV","SearchResult","_s","searchVideos","setSearchVideos","searchParam","getSearchResults","response","fetch","jsonResponse","json","items","length","get","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","video","to","id","videoId","info","_c","$RefreshReg$"],"sources":["/home/shreyas/Documents/newdashboard/youtube-clone/src/components/SearchResult.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport {\n  YOUTUBE_KEYWORD_API_PART1,\n  YOUTUBE_KEYWORD_API_PART2\n} from \"../utils/constants\";\nimport VideoCard from \"./VideoCard\";\nimport Shimmer from \"./Shimmer\";\n\nconst SearchResult = () => {\n  const [searchVideos, setSearchVideos] = useState([]);\n  const [searchParam] = useSearchParams();\n\n  const getSearchResults = async () => {\n    const response = await fetch(\n      YOUTUBE_KEYWORD_API_PART1 + searchParam + YOUTUBE_KEYWORD_API_PART2\n    );\n    const jsonResponse = await response.json();\n    jsonResponse.items.length > 0 && setSearchVideos(jsonResponse.items);\n  }\n\n  useEffect(() => {\n    getSearchResults(searchParam.get('search_query'));\n  }, [searchParam])\n\n  if (searchVideos.length === 0) return <Shimmer />\n\n  return (\n    <div className=\"flex flex-wrap\">\n      {searchVideos.map((video) => {\n        return (\n          <Link key={video.id.videoId} to={'../watch?v=' + video.id.videoId}>\n            <VideoCard info={video} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default SearchResult;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,SACEC,yBAAyB,EACzBC,yBAAyB,QACpB,oBAAoB;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,WAAW,CAAC,GAAGZ,eAAe,EAAE;EAEvC,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1Bb,yBAAyB,GAAGU,WAAW,GAAGT,yBAAyB,CACpE;IACD,MAAMa,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAC1CD,YAAY,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,IAAIR,eAAe,CAACK,YAAY,CAACE,KAAK,CAAC;EACtE,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdc,gBAAgB,CAACD,WAAW,CAACQ,GAAG,CAAC,cAAc,CAAC,CAAC;EACnD,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,IAAIF,YAAY,CAACS,MAAM,KAAK,CAAC,EAAE,oBAAOZ,OAAA,CAACF,OAAO;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAEjD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BhB,YAAY,CAACiB,GAAG,CAAEC,KAAK,IAAK;MAC3B,oBACErB,OAAA,CAACN,IAAI;QAAwB4B,EAAE,EAAE,aAAa,GAAGD,KAAK,CAACE,EAAE,CAACC,OAAQ;QAAAL,QAAA,eAChEnB,OAAA,CAACH,SAAS;UAAC4B,IAAI,EAAEJ;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG,GADjBI,KAAK,CAACE,EAAE,CAACC,OAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEpB;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAAf,EAAA,CA7BKD,YAAY;EAAA,QAEMR,eAAe;AAAA;AAAAiC,EAAA,GAFjCzB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}